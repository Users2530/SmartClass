지속가능한 김포고등학교 맞춤형 학교 어플리케이션 개발
정현수 (31112)
김포고등학교

Development of Sustainable School Application Designed for Gimpo High School
Jeong Hyeonsoo
Gimpo High School

ABSTRACT

 

Keyword : 김포고등학교, 학교 어플리케이션, 

Ⅰ. 서론

1. 연구 동기

 21세기 정보 시대를 맞아 휴대전화 기기를 활용하는 사람이 많아졌고, 특히 스마트폰 등 정보 기기를 사용하는 사람들이 점점 많아지고 있다(방송통신위원회 & 한국방송광고진흥공사, 2017). 또한 스마트폰의 용도도 단지 전화나 문자를 하는 것을 넘어 인터넷에 접속하여 뉴스를 보고 블로그에 글을 올리는 등 매우 다양해졌다. 이런 경향에 발맞추어 청소년들에게 스마트폰 및 어플리케이션은 일상 및 학업에 있어 필수기기로 자리 잡고 있으며, 각종 정보요구를 해결하기 위해 다양한 유형의 스마트폰 어플리케이션을 이용하고 있다(이승민 & 이종욱. 2017). 하지만 국내 대부분의 초‧중‧고교에서는 스마트폰에서 사용할 수 있는 학교 어플리케이션이나 모바일 홈페이지는 거의 갖추고 있지 않아, 학생들이나 학부모들이 소식을 받아보려면 컴퓨터를 이용해 학교 홈페이지에 접속해야만 하는 불편을 겪어왔다(이성규, 2012). 따라서 본 연구에서는 이런 어려움을 해결하기 위해 지속가능한 김포고등학교 맞춤형 학교 어플리케이션을 개발하여 정보를 한 어플리케이션에서 간편하게 확인하고, 오프라인에서도 미리 저장된 정보를 확인할 수 있도록 하는 등의 연구를 통해 이런 불편함을 개선하고자 본 연구를 제안하게 되었다.

2. 연구 목적

 본 연구에서는 먼저 학교 어플리케이션에 필요한 기능을 제안한다. 그리고 학교 어플리케이션을 설계, 개발하고 배포한다.

3. 연구 문제

 - 왜 어플리케이션인가?

 학교생활에 필요한 정보를 얻을 수 있는 방법은 많지만, 필요한 정보들을 한 번에 모아 보기가 힘들다. 최근에는 스마트폰의 보급에 따라 스마트폰을 이용해 정보를 얻고자 하는 수요가 급증하였으나, 아직 스마트폰 사용자들을 위한 어플리케이션이나 모바일 홈페이지의 개발은 미미한 수준이다. 그래서 사용자들은 인터넷에 연결한 컴퓨터를 통해 학교 홈페이지에 접속해야만 정보를 얻을 수 있는 불편함이 있다. 그러나 어플리케이션이라는 방법을 통해 정보를 한 곳에 모아서 제공한다면 학생도 쉽게 정보에 접근할 수 있으며, 정보가 모여 있어 한 번에 확인할 수 있으므로 더 적극적으로 학교생활에 참여할 수 있게 될 것이고 인터넷에 연결되지 않아도 미리 정보를 받아 놓았다가 보여 주는 형식으로 정보를 확인할 수 있어 더 이익이 될 것이라 생각하여 어플리케이션을 개발하고자 한다.

Ⅱ. 이론적 배경 및 선행연구

 - 이론적 배경

1. 안드로이드 (Android)

<그림 > 안드로이드 아이콘과 로고
 안드로이드는 리눅스 커널을 기반으로 구글(Google) 사에서 제작한 모바일 운영 체제이다. 현재 2017-08-21 기준 안드로이드 8.1(Oreo, API Level 26)이 출시되어 있다.

<그림 > 안드로이드 운영체제의 모습
 어플리케이션을 개발하는 도구인 안드로이드 SDK(Software Development Kit: 소프트웨어 개발 도구)가 공개되어 있으며, 안드로이드 기기가 없어도 컴퓨터에서 안드로이드 운영체제를 설치하여 안드로이드 어플리케이션을 실행할 수 있는 에뮬레이터인 AVD(Android Virtual Device: 안드로이드 가상 기기)도 무료로 공개되어 있다.
 안드로이드가 어플리케이션을 위해 공식 지원하는 프로그래밍 언어는 Java, Kotlin 등이 있다. 이 프로그래밍 언어를 이용하여 개발한 어플리케이션을 네이티브 어플리케이션(Native Application)이라 한다. 네이티브 어플리케이션은 안드로이드가 제공하는 모든 기능을 이용할 수 있다. 이외에도 비공식이지만 Xamarin, Unity 등을 통해 C#이나 .NET Framework 등을 이용할 수 있으며 이외에도 MIT App Inventor, Adobe Flash 등을 이용하여 어플리케이션을 개발할 수 있다.
 2017년 기준 대한민국의 스마트폰 이용자들 중 약 89.0%(대한민국 국민 전체의 약 77.5%)가 안드로이드 운영체제 스마트폰을 사용하고 있다(방송통신위원회, 2018).

2. 안드로이드 어플리케이션 (Android Application)
 안드로이드 어플리케이션(이하 '어플리케이션' 또는 '앱')은 안드로이드 운영체제 스마트폰에서 실행할 수 있는 응용 프로그램의 일종이다.
 어플리케이션은 .apk 접미사로 끝나는 아카이브 파일(압축 파일) 형태의 패키지로 제공되며, 하나의 패키지 파일에는 어플리케이션의 모든 콘텐츠가 들어 있다.
 어플리케이션을 구글 플레이 스토어에 업로드하기 위해서는 먼저 어플리케이션이 일정한 키로써 서명되어 있어야 하며, 어플리케이션의 패키지명이 고유해야 한다. 안드로이드 시스템은 패키지명으로 각 어플리케이션을 구별하므로, 동일한 패키지명의 다른 어플리케이션은 안드로이드 시스템에서는 동일한 어플리케이션으로 취급된다. 패키지명은 개발사 또는 개발자의 웹 주소의 순서를 역전한 것 뒤에 어플리케이션 이름을 넣어서 정하는 것이 일반적이다.
 어플리케이션은 액티비티(Activities), 서비스(Services), 콘텐츠 제공자(Content Providers), 브로드캐스트 수신기(Broadcast Receivers)의 네 가지 요소로 구성된다. 액티비티는 사용자 인터페이스가 있는 각각의 화면이고, 서비스는 원격 프로세스나 시간이 오래 걸리는 작업을 수행하기 위해 백그라운드에서 실행되는 구성 요소이며, 콘텐츠 제공자는 어플리케이션이 저장소에 접근하여 데이터를 읽고 쓸 수 있도록 관리하는 구성 요소이고 브로드캐스트 수신기는 시스템과 어플리케이션이 서로 자신의 상태를 주고받을 수 있도록 중계하는 구성 요소이다.
 어플리케이션 개발에 있어서는 크게 디자인, 기능, 권한 등을 살펴야 하는데, 각각 *.xml, *.java, AndroidManifest.xml 파일들로 대표된다. *.xml 파일들을 통해 각 화면이 어떻게 생겼으며 어떤 요소로 구성되어 있는지를 설정하고, *.java 파일들을 통해 각 화면의 요소가 어떻게 작동하는지 설정하며 AndroidManifest.xml 파일을 통해 어플리케이션이 어떤 작동을 할 수 있으며 어떻게 구성되었고 어떤 권한을 가지는지 설정할 수 있다.


<그림 > 안드로이드 스튜디오 화면
3. 안드로이드 스튜디오 (Android Studio)
 안드로이드 스튜디오는 구글이 안드로이드 앱 개발을 위해 만든 IDE(Integrated Development Environment: 통합 개발 환경)이다. 현재 안드로이드의 공식 IDE이다. Windows, MacOS, Linux 등 여러 운영체제에서 무료로 사용할 수 있다.
 안드로이드가 공식 지원하는 프로그래밍 언어인 Java, Kotlin을 지원하며, 이외에도 C++ 등의 다른 언어를 사용할 수 있도록 도구를 제공한다.
 안드로이드 스튜디오는 안드로이드 SDK를 간편하게 다운로드하고 관리할 수 있도록 하는 도구 또한 제공하고 있다.


4. ADB (Android Debug Bridge)
 ADB는 컴퓨터와 안드로이드 운영체제 스마트폰이 서로 통신할 수 있는 도구이다. 일반적으로 명령줄(CL: Command Line)에서 실행할 수 있다. ADB를 이용하여 컴퓨터에서 만든 어플리케이션을 안드로이드 운영체제 스마트폰에 설치하고 실행할 수 있으며, 컴퓨터에서 안드로이드 운영체제 스마트폰의 정보나 작업 기록, 작동 여부를 확인할 수 있다.
 ADB는 안드로이드 SDK에 포함되어 있다. 따라서 안드로이드 스튜디오에서도 사용할 수 있다.

5. 구글 플레이 스토어 (Google Play)

<그림 > 구글 플레이 로고
 구글 플레이 스토어는 구글의 디지털 콘텐츠 서비스로, 안드로이드 어플리케이션 및 음악, 영화, TV 프로그램, 책 등을 사거나 팔 수 있도록 하는 온라인 스토어이다. 기존의 안드로
<그림 > 구글 플레이에 김포고등학교 스마트 클래스 어플리케이션이 등록된 모습
이드 마켓이 2012년 구글 뮤직 서비스와 통합되면서 도입되었다.
 현재 어플리케이션을 등록하기 위해서는 개발자 계정이 필요한데, 하나의 구글 계정을 개발자 계정으로 등록하기 위해서는 25$(약 2만 5천 원)를 개발자 계정 등록 수수료로 지불해야 한다. 한 번 개발자 계정으로 등록되면 영구히 사용할 수 있으며, 어플리케이션을 등록할 때 따로 수수료를 낼 필요는 없다.
 어플리케이션을 등록하기 위해서는 어플리케이션 이름, 어플리케이션을 소개하기 위한 짧은 소개문과 어플리케이션의 기능을 설명하는 긴 소개문을 작성해야 하며, 어플리케이션 아이콘, 어플리케이션 사용 중에 찍은 캡처 사진, 어플리케이션 프로필에 등록될 사진이 필요하며 이외에도 사용 등급 설문에 응해야 하고, 어플리케이션 카테고리를 선택하여 어플리케이션을 등록할 수 있다.
 개발자가 어플리케이션을 등록하면 약 2시간 뒤에 플레이 스토어에서 검색 등을 통해 확인할 수 있으며, 어플리케이션을 업데이트하면 약 15분 뒤에 플레이 스토어에 적용된다.
 구글 플레이 스토어는 각 앱마다 베타테스트를 지원하는데, 미리 등록한 사람들이나 특정한 Google+ 커뮤니티에 등록한 사람들 또는 모든 사용자들을 대상으로 베타테스트를 진행할 수 있다. 모든 사용자들을 대상으로 베타테스트를 진행하는 것을 오픈 베타테스트(또는 줄여서 ‘오픈 베타’)라고 하며, 이외에는 클로즈드 베타테스트(또는 ‘클로즈드 베타’)라고 한다.
 클로즈드 베타테스트를 진행할 경우에는 베타테스트 참가자들이 개발자가 제공한 링크를 통해 베타테스터 등록을 해야 한다. 베타테스터로 등록하면 플레이 스토어에서 베타테스트에 참가하는 어플리케이션의 베타 버전을 다운로드하여 설치할 수 있다.

6. Java
 Java는 썬 마이크로시스템즈가 개발하고 현재 썬 마이크로시스템즈를 합병한 오라클이 관리하는 OOP(Object-Oriented Programming: 객체지향 프로그래밍) 언어이다.
 Java는 C와 비슷한 문법 구조를 보인다. 그래서 C를 학습한 사람은 Java의 기본 문법을 이해하기 쉽다.
 Java는 플랫폼 독립적이다. 즉 Java는 어떤 기기에서 실행하든지 동일한 코드가 완전히 동일한 작업을 수행할 수 있다. 이는 Java의 실행 방식의 차이 때문이다. 일반적인 프로그래밍 언어는 컴파일러로 컴파일한 결과물로 즉시 실행 가능한 바이너리 파일(이진 코드)이 생성되는데, 이는 컴파일러와, 컴파일러가 실행되는 운영체제 등의 플랫폼에 영향을 받는다. 즉 Linux 환경에서 프로그램을 컴파일하였다면, Windows 환경에서 작동을 보장할 수 없다. 하지만 Java로 작성된 소스 코드를 컴파일러로 컴파일하면 바이트코드라는 특수한 바이너리 파일이 되는데, 이는 JVM(Java Virtual Machine: Java 가상 머신)이라는 특수한 환경에서 실행할 수 있다. JVM은 Java의 바이트코드를 플랫폼에 상관없이 동일한 형태로 실행시키는데, 이 때문에 Java로 작성된 프로그램들은 플랫폼에 구애받지 않고도 동일한 작업을 수행할 수 있게 되었다.
 안드로이드 운영체제는 어플리케이션을 위해 Java를 공식으로 지원하고 있다.

7. 김포고등학교 (金浦高等學校, Gimpo High School)

<그림 > 김포고등학교 교표
 김포고등학교는 경기도 김포시 사우동에 있는 공립 고등학교이다. 주소는 경기도 김포시 봉화로 37-15 (사우동) 이며, 경기도교육청이 관할한다.
 1955년 김포여자상업고등학교로 개교하여 1995년 김포고등학교로 교명을 변경하였다. 2017년 교육부 지정 과학중점학교로 선정되어 과학중점 계열을 운영하고 있다.
 학교상징으로 교목은 소나무, 교화는 난초이며 교색은 파란색이다. 교훈은 '건강하고 창조적이며 성실한 사람'이다. 교화는 이웃한 학교인 김포여자중학교와 동일하다.
 학교 건물에는 크게 송관과 란관이 있다. 송관과 란관 사이에는 1층의 간격이 있는데, 송관 1층이 란관 2층에 대응한다. 주요시설로 란관 지하 1층에는 급식실이 있으며, 란관 3층에는 과학실 등이 집중된 '스마트 존'이 있고, 란관 4층에는 도서실과 독서실인 '시습당'이 있다. 란관 5층에는 체육관이 있다. 송관 1층에는 교무실이 있으며, 2층에는 Wee 클래스가 운영되고 있다. 옥상에는 천체관측실이 설치되어 운영되고 있다.

8. 깃 (Git)

<그림 > 깃 로고
 깃은 리눅스의 개발자인 리누스 토발즈가 개발한 VCS(Version Control System: 버전 관리 시스템)의 하나이다. 하나의 작업 폴더를 설정하면 그 작업 폴더 내에 있는 프로그램의 소스 코드 등을 시간에 따라 관리할 수 있으며, 하나의 작업 폴더가 완전한 형태의 저장소이므로 하나의 작업 폴더가 전체 기록과 각 기록의 추적에 필요한 정보를 가지고 있어 굉장히 유용하다.
 깃은 소스 코드의 변경 사항 추적이나 소스 코드의 롤백(Rollback: 되돌리기)이 쉬워 특히 소프트웨어 개발 분야에서 활발하게 사용되고 있다.

9. 깃허브 (GitHub)

<그림 > 깃허브 로고
 깃허브(https://github.com)는 깃을 이용하여 관리하는 프로젝트를 지원하는 웹 호스팅 서비스이다. 기본적으로 무료로 제공되지만, 공개되지 않는 리포지토리를 만들기 위해서는 일정 기간마다 사용료를 지불해야 한다.
 깃허브를 이용하면 깃을 이용하여 관리하는 프로젝트를 인터넷에 저장할 수 있으며, 기본적으로 인터넷을 통해 소스 코드를 공개할 수 있고 다른 불특정의 사용자가 소스 코드를 빌려가거나 소스 코드를 수정하는 데 도움을 줄 수 있다.

10. 한국환경공단
 한국환경공단은 2010년 창립하여 환경오염방지, 환경개선 및 자원순환을 촉진하는 사업을 추진하고 환경 보전과 순환형 자원관리체계 마련 등의 업무를 수행하는 환경부 산하 위탁집행형 준정부기관이다.

<그림 > 에어코리아 로고

<그림 > 공공데이터포털 시스템 구성도
 한국환경공단은 전국 97개 시/군에 설치된 323개의 도시대기 측정망, 도로변대기 측정망, 국가배경 측정망, 교외대기 측정망에서 측정된 대기환경기준물질(미세먼지, 초미세먼지, 오존, 아황산가스, 일산화탄소, 이산화질소 등)의 측정 자료 및 황사경보제 및 오존경보제 등의 자료를 실시간으로 제공하는 전국 실시간 대기오염도 공개 누리집인 에어코리아(AirKorea: www.airkorea.or.kr)를 운영하고 있다.

11. 공공데이터포털
 공공데이터포털(www.data.or.kr)은 행정안전부가 운영하는 공공데이터 통합 창구이다. 「공공데이터의 제공 및 이용 활성화에 관한 법률」 제21조에 근거해 설치되어 운영되고 있다. 공공데이터포털에서는 파일 데이터, Open API(Open Application Programming Interface: 응용 프로그램 프로그래밍을 위한 공개 인터페이스), 데이터 시각화 등 사용자(국민)가 쉽고 편리하게 공공데이터를 이용할 수 있도록 다양한 방식을 제공하고 있다.
 한국환경공단은 공공데이터포털을 통해 REST API 형식으로 제공되는 대기오염정보 조회 서비스를 운영하고 있다.

12. API (Application Programming Interface)
 API는 웹 기반 서비스, 운영 체제, 데이터베이스, 컴퓨터 장치, 소프트웨어 라이브러리 등 응용 프로그램의 바깥에서 제공하는 기능을 응용 프로그램이 사용할 수 있도록 일정 규격에 맞추어 정보를 공유하는 기능을 일컫는다. 특히 웹 API(Web API)는 인터넷에 연결된 응용 프로그램들이 일정 규격에 맞추어 정보를 공유할 수 있도록 하는 기능인데, 최근에는 블로그에 직접 접속하지 않아도 글을 작성하여 게시할 수 있는 블로그 API, 날씨 정보를 알려주는 날씨 API 등이 공개되어 있다.
 API에는 API 명세(API Specification)가 필수적인데, 주로 데이터 구조, 객체, 변수, 원격 호출 등 프로그래머가 API를 사용하여 프로그램을 개발하는 데 필수적인 정보를 제공한다. 명세가 설명하는 규격에 맞추면 데이터를 공유할 수 있게 된다.

13. Firebase

<그림 > Firebase 로고
 Firebase는 2011년 Firebase, Inc. 사가 개발하고 2014년 구글이 인수한 모바일 및 웹 앱 개발 플랫폼이다.
 Firebase는 실시간 데이터베이스(Realtime Database) 서비스를 제공한다. 이는 클라이언트와 Firebase의 서버가 저장하는 데이터를 동기화하는 API로 이루어져 있는데, 이 API는 Android, iOS, JS(JavaScript: 자바스크립트), Java, Objective-C, Swift, Node.js 등으로 작성된 프로그램에서 사용할 수 있다. 이 API는 특별하게도 REST API 기능을 사용하는데, 이는 HTTP 연결을 사용하는 API보다 높은 성능을 보인다. 이 API는 서버의 보안 규칙(Security rules)을 설정할 수 있고, 그에 따라 개발자는 사용자-서버 간의 통신을 암호화할 수 있다.

14. MIT 라이선스(MIT License)
 MIT 라이선스는 미국 매사추세츠 공과대학교(MIT)에서 해당 대학의 소프트웨어 공학도들을 돕기 위해 개발한 라이선스(허가서)다.
 MIT 라이선스를 통해 배포되는 소프트웨어는 저작권 안내 문구와 MIT 라이선스 문구가 모든 소프트웨어 복제본에 포함되어야 한다는 조건을 만족하면 소프트웨어의 복제본을 별다른 제한 없이 무상으로 사용할 수 있는 권한을 부여받을 수 있다. 즉, 소프트웨어의 복제본을 무제한으로 사용, 복제, 수정, 병합, 공표, 배포, 서브라이선스 설정 및 판매할 수 있는 권리 및 이상의 행위를 소프트웨어를 제공받은 다른 수취인들에게 허용할 수 있는 권리를 부여받을 수 있다.
 MIT 라이선스의 원본 내용은 다음과 같다.

 The MIT License

Copyright (c) <year> <copyright holders>

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
<글 1> MIT License


 - 선행연구

1. 강원대학교 어플리케이션 사용성 평가
 이 연구에서는 학생들이 빈번하게 선택하는 메뉴 집단인 고빈도 메뉴 집단을 설문한 결과 '학사일정', '학적관리','열람실','식단조회','학사안내','수업관리','공지사항','도서검색','셔틀정보','열람실','시간표' 등 총 11개의 하위 메뉴가 선정되었다.
 고빈도 메뉴를 손쉽고 빠르게 사용할 수 있도록 하기 위해 강원대학교 어플리케이션의 메인 메뉴를 11개의 하위 메뉴들로 구성하는 것을 제안했다.

2. 안드로이드 기반의 학과 홍보 및 교과과정 소개를 위한 모바일 어플리케이션
 이 연구에서는 안드로이드 기반으로 학부 소개와 정보 전달을 위한 모바일 프로그램을 개발하였다. 이 어플리케이션을 통해 사용자는 학부 공지사항에 대한 정보를 실시간으로 받아 볼 수 있으며, 학부 시설과 교과과정, 교수진에 대한 정보를 알 수 있다.
 이 연구에서는 또 *.java 파일과 *.xml 파일의 각 기능에 대해 간략하게 소개하고 있다.

3. 아이폰 기반의 학교 홍보 어플리케이션 개발
 이 연구에서는 iOS 운영체제 스마트폰 즉 아이폰(iPhone)에서 사용할 수 있는 학교 홍보 어플리케이션을 개발하였다. 이 어플리케이션은 서버와 클라이언트로 구성되는데, 서버에 데이터를 업로드 하여 각 클라이언트에 배포하는 형식으로써 데이터 용량 절감 및 데이터의 효율적 관리를 구현하였다.

4. 최신 정보통신기술 Google에서 제공하는 Firebase의 실시간 데이터베이스 이용에 관한 연구
 이 연구에서는  Google에서 제공하는 Firebase 상의 실시간 데이터베이스를 이용해서 모든 클라이언트가 실시간으로 데이터를 동기화하고, 변경되는 데이터를 실시간으로 감지하고 이용하는 클라이언트 간 interaction을 구현하였다.

Ⅲ. 연구 방법

1. 연구 순서
 본 연구는 기능 탐색, 기능 설계, 기능 구현, 피드백 단계로 진행한다. 각 단계의 자세한 설명은 <표 1>에서 볼 수 있다.


단계
설명
기능 탐색 단계

1. 학교 어플리케이션의 예상 사용자를 고려하여 학교 어플리케이션의 플랫폼을 결정한다.
2. 학교 어플리케이션에 필요한 기능을 제안한다.
가. 학교 어플리케이션의 예상 사용자인 김포고등학교 학생과 교사를 대상으로 설문을 실시하여 학교 어플리케이션에 필요한 기능을 추천받도록 한다.
나. 다른 학교의 학교 어플리케이션이 제공하고 있는 기능과 평가를 참조하여 필요한 기능을 제안한다.

기능 설계 단계

1. 제안된 기능을 어떻게 구현할 수 있을지 조사한다.
가. 기능과 관련된 정보를 제공하는 API 또는 인터넷 서비스 등을 조사하고, 명세를 확인한다.
나. 이미 있는 라이브러리의 사용처와 사용법 등을 조사한다.
2. 학교 어플리케이션이 어떻게 정보를 제공해야 할지 구상한다.
가. 다른 학교의 학교 어플리케이션을 참고하여 학교 어플리케이션의 레이아웃 등의 화면 구성을 작성한다.

기능 구현 단계

1. 기능을 직접 구현하고 실행할 수 있는 어플리케이션을 작성한다.
가. Android Studio를 이용하여 소스 코드를 작성한다.
나. 안드로이드 SDK를 활용하여 실행할 수 있는 어플리케이션을 작성한다.

피드백 단계

1. 실행할 수 있는 앱을 배포하여 베타테스트를 진행한다.
가. Google+에 베타테스터 커뮤니티를 생성하고 구글 플레이 스토어에서 클로즈드 베타테스트를 진행하여 다양한 안드로이드 운영체제 스마트폰에서 실행해 본다.
2. 학교 어플리케이션을 출시하고 배포한다.

<표 1> 연구 진행 단계


2. 연구 활동 및 과정
가. 기능 탐색 단계
1) 학교 어플리케이션 플랫폼 결정
 방송통신위원회(2018)에 따르면, 2017년 기준 대한민국 국민의 약 87.0%가 스마트폰을 이용하고 있다. 2016년의 84.1%보다 2.9%p 증가하였고, 스마트폰 보유 및 이용 경험 비율은 꾸준히 상승하고 있다. 특히 본 연구의 대상인 김포고등학교가 있는 경기도의 스마트폰 이용률은 90.1%에 이른다. 또한 본 연구의 대상인 김포고등학교 재학생이 속한 10대 청소년들의 스마트폰 이용률은 전국 95.3%로 높은 이용률이 나타났다. 또한 주로 이용하는 스마트폰의 운영체제로는 스마트폰 사용자의 89.0%가 안드로이드 운영체제 스마트폰을 사용하고 있으며, iOS는 10.9%, 기타 운영체제는 0.1%로 나타났다. 즉 안드로이드 운영체제 사용자가 다른 운영체제보다 압도적으로 많았다.
 여러 운영체제를 지원하기 위해서는 Xamarin 등 여러 운영체제를 지원하는 개발 도구로 개발해야 한다. 그러나 그런 도구를 사용하여 개발하기에는 인력과 시간이 부족하며 간단한 어플리케이션도 용량이 아주 커 사용자들이 쓰는 데에도 불편하다. 안드로이드 운영체제는 매우 보편적이고 어플리케이션을 배포할 때에도 구글 플레이 스토어를 통해 배포하기 쉽다. 또 Java를 공식적으로 지원하므로 개발도 간편하다. 따라서 안드로이드 운영체제를 선택하여 어플리케이션을 개발해 배포하는 것이 더 좋을 것으로 사료된다.

2) 학교 어플리케이션 기능 제안
 구글 플레이 스토어에 공개된 풍무고등학교의 비공식 학교 어플리케이션 ‘Smart Pungmu’는 ‘학교소개’, ‘학사일정’, ‘학급·교사 시간표’, ‘급식표’, ‘교통카드 잔액 확인’ 기능을 제공하고 있다. 여기서 학교생활에 큰 영향을 주지 않는 ‘교통카드 잔액 확인’ 기능 및 ‘학교소개’ 기능을 제외한 나머지 3개 항목에 대해 2017년 11월 김포고등학교 2학년 학생 27명과 교사 3명(총 30명)을 대상으로 설문조사를 진행하였다. 그 결과 6.6%(2표)의 설문이 무효표로 나타났으며, 학사일정 기능이 필요하다는 응답이 33.3%(10표), 학교 공지사항 기능이 필요하다는 응답이 30.0%(9표)였으며, 반별 시간표 기능이 필요하다는 응답이 16.7%(5표), 급식 식단표 기능이 필요하다는 응답은 13.3%(4표)로 나타났다.
 곽소윤, 이창훈, 임용빈(2016)에 따르면, 평소 미세먼지에 대해 대한민국 국민의 90.8%는 미세먼지에 대해 관심이 있는 것으로 나타났다. 또한 교육부(2017)에 따르면 고농도 미세먼지 당일 “나쁨” 이상 시 유치원 및 학교에서는 체육활동, 현장학습, 운동회 등을 실내수업(활동)으로 대체하는 등 실외수업을 자제해야 하며, 미세먼지 경보 발령 시에는 수업시간 및 등·하교 시간을 조정하거나 임시휴업을 설정해야 하는 등, 미세먼지가 학교생활에 미치는 영향이 크다.
 결과를 종합해 보면 학사일정, 반별 시간표, 급식 식단표, 학교 공지사항, 미세먼지 모니터링 기능이 필요할 것으로 보인다.

나. 기능 설계 단계
 기능 탐색 단계에서 제시된 기능으로는 학사일정, 반별 시간표, 급식 식단표, 학교 공지사항, 미세먼지 모니터링 기능이 있었다. 그러나 학교 공지사항 기능을 구현하기에는 대회 알림 등의 공지사항이 규칙적으로 나오지 않고 공지 단계에서 전산화되어 있지 않거나 전산화되었어도 학생들이 직접 전산화된 정보원천에 접근할 수 없어 구현이 불가능하다는 결론에 이르렀다. 또한 반별 시간표 기능은 입력해야 하는 정보가 너무 많고 출력이 매우 복잡하였다. 또한 전산화된 정보원천에 접근할 수 없어 구현이 불가능하다는 결론에 이르렀다. 따라서 학사일정, 급식 식단표, 미세먼지 모니터링 기능을 중점으로 구현하기로 결정하였다.

1) API · 인터넷 서비스 · 라이브러리 조사
 학사일정 기능을 제공하기 위해 조사한 결과, 전산화된 정보원천으로는 교육행정정보시스템(NEIS, 나이스 대국민서비스)의 학생서비스에서 정보를 확인할 수 있었다. 정보를 받아오는 과정을 자동화하기 위해 조사한 결과 GitHub에 HyunJun Kim(사용자 아이디 agemor)이 공개한 School API를 찾아볼 수 있었다. School API는 전국 교육청 학생 서비스 페이지를 파싱하여 월간 학사일정과 급식 식단표를 불러올 수 있게 하는 라이브러리이다. 이 라이브러리는 MIT 라이선스에 따라 이용할 수 있기 때문에 이 라이브러리를 사용하기로 하였다. 본디 급식 식단표 기능은 공공데이터포털을 통해 교육행정정보시스템이 제공하는 학교 급식 API가 있었으나 현재 사용할 수 없었다.
 급식 식단표 기능을 제공하기 위해 조사한 결과, 전산화된 정보원천으로는 김포고등학교 누리집에서 정보를 확인할 수 있었다. 데이터를 받아오는 과정을 자동화하기 위해 더 조사한 결과, Jsoup을 찾아볼 수 있었다. Jsoup은 인터넷에 접속하여 HTML/CSS 로 작성된 홈페이지의 코드를 분석하고 원하는 부분의 데이터를 추출하는 Java 라이브러리이다. 이 라이브러리는 MIT 라이선스에 따라 이용할 수 있기 때문에 이 라이브러리를 사용하기로 하였다.
 미세먼지 모니터링 기능을 제공하기 위해 조사한 결과, 전산화된 정보원천으로는 한국환경공단의 에어코리아(AirKorea) 서비스에서 정보를 확인할 수 있었다. 정보를 받아오는 과정을 자동화하기 위해 조사한 결과 공공데이터포털을 통해 한국환경공단이 제공하는 대기오염정보 조회 서비스를 찾아볼 수 있었다. 대기오염정보 조회 서비스 API는 크리에이티브 커먼즈 저작자 표시 라이선스(CC-BY)를 통해 이용할 수 있기 때문에 이 API를 사용하기로 하였다.

2) 
화면 역할
화면 캡처
레이아웃 설명
도입 화면

1. 배경: 풍무고등학교 교문 사진
2. 구조: 배경 이외 없음.
3. 작업: 
 - 백그라운드: 정보 초기화 및 데이터베이스 업데이트
4. 비고: 데이터베이스 업데이트 중에는 [DB 업데이트 중...]이라는 안내창이 뜸. 작업이 종료되면 안내창을 닫고 자동으로 메인 화면으로 이동함.
메인 화면

1. 배경:
 - 상부: 풍무고등학교 사진
 - 하부: 백색
2. 구조: 레이아웃이 상부와 하부로 분리됨.
 - 상부: 상단의 앱 바에 앱 서랍 열기 버튼(≡)과 설정 열기 버튼(⋮)이 있음.
 - 하부: 점심 식단과 시간표 정보를 카드에 표시해 줌.
3. 작업:
 - 포그라운드: 각 카드에 정보를 표시
4. 비고: 점심 식단을 클릭하면 저녁 식단으로 바뀜.
앱 서랍

1. 배경: 
- 앱 서랍 외부: 이전에 있던 화면
- 앱 서랍 내부: 백색
2. 구조: 앱의 어느 화면에서든 앱 서랍 열기 버튼(≡)을 누르면 왼쪽에서 튀어나옴.
앱의 각 화면으로 이동할 수 있도록 되어 있음.
3. 작업: 각 화면의 이름을 누르면 화면을 이동함.
4. 비고: 앱 서랍 외부나 뒤로가기 버튼을 누르면 앱 서랍이 오른쪽으로 들어가며 닫힘.
학사일정

1. 배경:
 - 상부: 녹색  - 하부: 백색
2. 구조: 레이아웃이 상부와 하부로 분리됨.
 - 상부: 상단의 앱 바에 앱 서랍 열기 버튼과 설정 열기 버튼이 있음.
학사 일정이 표시된 달을 표시하는 동시에 좌우 버튼으로 한 달씩 이동할 수 있음.
 - 하부: 학사일정 목록을 표시함. 위아래로 스크롤할 수 있음.
3. 작업: 버튼을 누르면 표시 달을 변경.
4. 비고: 없음.
학급별 시간표

1. 배경:
 - 상부: 녹색  - 하부: 백색
2. 구조: 레이아웃이 상하부로 분리됨.
 - 상부: 상단에 앱 바가 있음. 어느 학급의 시간표인지 표시함.
 - 하부: 학급 시간표 내용을 표시함. 하단에 DB 업데이트 일자가 표시되어 있음.
3. 작업: DB 업데이트 일자를 누르면 시간표를 업데이트함.
4. 비고: 시간표를 표시할 학급은 설정 창에서 설정해야 함.
선생님 시간표

1. 배경:
 - 상부: 녹색  - 하부: 백색
2. 구조: 레이아웃이 상하부로 분리됨.
 - 상부: 상단 앱 바. 어느 선생님의 시간표인지 표시.
 - 하부: 선생님 선택 가능. 선생님의 시간표 내용을 표시.
3. 작업: 선택 안내 밑의 선택기를 클릭하면 선생님 목록이 나옴. 선생님을 선택하면 화면의 내용이 변경됨.
4. 비고: 없음.
급식 식단표

1. 배경:
 - 상부: 녹색  - 하부: 백색
2. 구조: 레이아웃이 상하부로 분리됨.
 - 상부: 상단 앱 바. 식사 종류 표시.
 - 하부: 중식/석식 선택 가능. 식단표 표시. 식단표 좌우의 버튼으로 날짜 변경 가능. 하단에 알레르기 정보 표시.
3. 작업: 중식/석식 버튼으로 식단표의 내용을 변경. 식단표 좌우 버튼으로 날짜 변경.
4. 비고: 없음.
교통카드 잔액조회

1. 배경: 백색
2. 구조: 상단 앱 바. 중앙부 카드 아이콘과 카드 인식 알림. 하단에 카드 정보 표시.
3. 작업: NFC 정보를 이용하여 카드 태그 시 카드 인식 후 정보 표시.
4. 비고: 카드번호의 중간 부분을 가리지 않아 보안 문제 예상됨.
<표 2> 풍무고등학교 비공식 학교 어플리케이션의 화면 구성
학교 어플리케이션의 레이아웃 설계

 구글 플레이 스토어에 공개된 풍무고등학교의 비공식 학교 어플리케이션 ‘Smart Pungmu’의 화면 구성과 역할은 위 <표 2>처럼 정리할 수 있다.
 <표 2>와 제안된 기능을 참조하여 설계한 학교 어플리케이션의 화면 구성은 다음과 같다.


화면 캡처
화면 정보

1. 액티비티명
도입 화면 (IntroActivity)
2. 구조 및 배경
백색 배경의 단일 레이아웃 위에 3개 요소
3. 화면 내 요소
교표 [그림]
앱 이름, 버전 정보 [글]
4. 작동
백그라운드에서 데이터 초기화
5. 비고
어플리케이션의 완전한 최적화를 위해 최소 3초 이상 대기

1. 액티비티명
메인 화면 (MainActivity)
2. 구조 및 배경
상하로 분절된 2개 레이아웃
김포고등학교 전경사진 배경의 상부 레이아웃 위에 4개 요소
백색 배경의 하부 레이아웃 위에 5개 요소
3. 화면 내 요소
상부
- 상단 바 [앱바]
- 앱 서랍 활성 아이콘 [버튼]
- 교명 및 교훈 [글]
하부
- 표시 내용 선택기 [선택기]
- 좌·우 아이콘 [버튼]
- 식단정보·일정정보·대기정보 [글]
- 부가 표시 내용 [글]
4. 작동
앱 서랍 활성 아이콘을 클릭: 앱 서랍이 열림
표시 내용 선택기를 클릭: 표시 내용의 전환 가능
좌·우 아이콘을 클릭: 표시 내용의 전환 가능
5. 비고
부가 표시 내용은 선택된 표시 내용에 따라 바뀜
식단정보는 앱을 실행하였을 당시 14:00 이전이면 중식 내용이, 이후면 석식 내용이 표시됨.

1. 화면 이름
앱 서랍
2. 구조 및 배경
앱 서랍을 열기 전의 화면 위 왼쪽 부분에 상하로 분절된 2개 레이아웃
녹색 배경의 상부 레이아웃 위에 3개 요소
백색 배경의 하부 레이아웃 위에 8개 요소
3. 화면 내 요소
상부
- 교표 [그림]
- 앱 이름, 교명 [글]
하부
- 각 화면 이름 [글]
- 각 화면 아이콘 [그림]
4. 작동
각 화면의 이름을 클릭: 클릭한 화면으로 전환됨
‘어플리케이션 정보’ 버튼 클릭: 어플리케이션 정보 표시
앱 서랍을 열기 전의 화면 부분이나 뒤로가기 버튼을 클릭: 앱 서랍 닫힘
5. 비고
도입 화면을 제외한 모든 화면에서 앱 서랍 활성 아이콘을 클릭하면 열림

1. 액티비티명
급식 정보 (MealInfoActivity)
2. 구조 및 배경
백색 배경의 단일 레이아웃 위에 10개 요소
3. 화면 내 요소
상단 바 [앱바]
앱 서랍 활성 아이콘 [버튼]
날짜 표시란 [글]
좌·우 아이콘 [버튼]
식단정보, 알레르기 정보 [글]
4. 작동
좌·우 아이콘을 클릭: 날짜와 표시 내용이 변경됨
뒤로가기 버튼을 클릭: 메인 화면으로 돌아감
5. 비고
메인 화면에서 급식 식단표를 표시할 때 쓰는 메커니즘을 동일하게 적용

1. 액티비티명
학사일정 (SchoolEventActivity)
2. 구조 및 배경
백색 배경의 단일 레이아웃 위에 8개 요소
3. 화면 내 요소
상단 바 [앱바]
앱 서랍 활성 아이콘 [버튼]
날짜 표시란 [글]
좌·우 아이콘 [버튼]
일정 정보 [목록]
4. 작동
날짜 표시란: 주 단위로 날짜 표시 (단, 월 단위를 넘는 날짜 간격에 대해서는 월 단위도 표시)
좌·우 아이콘을 클릭: 날짜와 표시 내용이 주 단위로 변경됨
일정 정보의 각 날짜 클릭: 그 날짜의 개인 일정 편집
뒤로가기 버튼을 클릭: 메인 화면으로 돌아감
5. 비고
메인 화면에서 일정을 표시할 때 쓰는 메커니즘과 다른 메커니즘을 따로 적용

1. 화면 이름
종료 질의 (QuitDialog)
2. 구조 및 배경
메인 화면 위 중앙 부분에 백색 배경의 단일 레이아웃 위 3개 요소
3. 화면 내 요소
종료 질문 [글]
종료, 취소 응답 [버튼]
4. 작동
종료 버튼 클릭: 어플리케이션 종료
종료 질의 바깥의 화면 부분이나 취소 버튼이나 뒤로가기 버튼 클릭: 종료 질의 닫힘
5. 비고
메인 화면에서 뒤로가기 버튼을 눌러야 열림
<표 3> 학교 어플리케이션 화면 구성 설계


다. 기능 구현 단계
1) 소스 코드 작성
 개발 기록과 소스 코드는 https://github.com/Users2530/SmartClass에서 확인할 수 있다.
 프로젝트 전반에 대한 설명은 https://github.com/Users2530/SmartClass/blob/master/README.md에서 확인할 수 있고, 변경 기록(Change log)은 https://github.com/Users2530/SmartClass/blob/master/Changelog.md에서 확인할 수 있다.

라. 피드백 단계
1) 베타테스트 진행
 베타테스트를 위해 Google+에 ‘김포고등학교 스마트 클래스 – Beta’라는 이름으로 공개 커뮤니티(https://plus.google.com/u/0/communities/114802030151890074480)를 생성하였다.
 ‘김포고등학교 스마트 클래스 – Beta’ 커뮤니티에 가입한 다음, 베타테스트 초대(https://pla.google.com/apps/testing/kr.hs.gimpo.smartclass)를 수락하면 베타테스트에 참가할 수 있다.
 베타테스트에 참가하였다면 구글 플레이 스토어에 ‘김포고등학교’ 혹은 ‘김포고등학교 스마트 클래스’를 검색하거나 웹 주소 https://play.google.com/store/apps/details?id=kr.hs.gimpo.smartclass 에 직접 접속하여 개발 중의 어플리케이션을 안드로이드 기기에 설치할 수 있다.

2) 학교 어플리케이션 출시 및 배포
 연구시간의 부족으로 인해 학교 어플리케이션을 출시하고 배포할 수는 없었다.

Ⅳ. 결론 및 제언

1. 연구결과 및 결론
 본 연구에서는 학교앱에 필요한 기능이 무엇인지 검증하고 김포고등학교 맞춤형 학교 어플리케이션을 제작하였다.
 학교앱에 필요한 기능이 무엇인지 검증한 결과 설문 조사에서는 학사일정, 학교 공지사항, 급식 식단표, 반별 시간표 기능이 제안되었으며, 다양한 학교 어플리케이션을 조사한 결과 교통카드 잔액 확인 기능이 제시되었고, 기타 방법으로는 대기정보 조회 기능이 제안되었다. 위에서 제안된 기능들은 학교생활에 직·간접적으로 연관되어 있어, 사용자층에서 위 기능이 포함된 학교 어플리케이션을 선호하는 것으로 보인다.
 김포고등학교 맞춤형 학교 어플리케이션을 개발하기 전의 기초 설정에서는 안드로이드 플랫폼을 사용하는 것을 
 김포고등학교 맞춤형 학교 어플리케이션을 개발한 결과 도입 화면, 메인 화면, 급식 정보 화면, 학사일정 화면 등이 있는 어플리케이션을 생성할 수 있었다. 그러나 제안된 모든 기능을 개발할 수 없었고, 시간 부족으로 인해 어플리케이션의 출시와 배포를 연구기간 내에 할 수 없었다는 한계가 있다.

3. 제언
 본 연구에서는 먼저 학교 어플리케이션에 필요한 기능을 제안하기 위해 설문조사를 진행하였다. 그러나 설문조사의 대상이 30명으로, 김포고등학교 학생이라는 대상을 대표하기에 지극히 모자랐으며, 설문조사한 내용에서 실제로 모든 내용이 적용되지 못해 설문조사의 의미가 심하게 퇴색되었다. 따라서 후속 연구로써 김포고등학교 학생이라는 모집단을 충분히 대표할 수 있는 표본을 선정하는 것을 제안한다.
 또한 본 연구에서는 시간 부족으로 연구 기간 내에 어플리케이션을 출시하고 배포하지 못했다. 그러나 어플리케이션이 충분히 안정화된 점, 어플리케이션의 기능이 대부분 구현된 점, 어플리케이션의 소스 코드가 깃허브를 통해 모두 공개된 점 등을 볼 때 후속 연구가 진행된다면 충분히 어플리케이션 출시 단계까지 갈 수 있을 것으로 보인다.


▣ 참고문헌 ▣

이승민, 이종욱 (2017). 청소년의 정보요구 해결을 위한 스마트폰 어플리케이션 이용행태. 한국비블리아학회지, 28(3), 175-196.

이성규. (2012). 앱이 학교를 변화시킨다. Retrieved June 20, 2018, from http://www.sciencetimes.co.kr/?news=앱이-학교를-변화시킨다

방송통신위원회, 한국방송광고진흥공사. (2018). 2017년 시청점유율 기초조사.

Google. (2018) Android 소개. Retrieved July 30, 2018, from https://developer.android.com/guide/

Google. (2018). 애플리케이션 기본 항목. Retrieved July 30, 2018, from https://developer.android.com/guide/components/fundamentals

Google. (2018). Android Studio 만나 보기. Retrieved July 30, 2018, from https://developer.android.com/studio/intro/

Google. (2018). Android 디버그 브리지. Retrieved July 30, 2018, from https://developer.android.com/studio/command-line/adb

Google. (연도미상). 앱 업로드. Retrieved February 24, 2018, from https://support.google.com/googleplay/android-developer/answer/113469?hl=ko

Google. (연도미상). Play Console 사용 방법. Retrieved February 24, 2018, from https://support.google.com/googleplay/android-developer/answer/6112435?hl=ko

Google. (연도미상). 공개, 비공개, 내부 테스트 설정. Retrieved February 24, 2018, from https://support.google.com/googleplay/android-developer/answer/3131213

Oracle. (연도미상). Java 기술에 대한 자세한 정보. Retrieved July 30, 2018, from https://www.java.com/ko/about/

Oracle. (연도미상). 유용한 개념 및 정의 용어집. Retrieved July 30, 2018, from https://www.java.com/ko/download/faq/helpful_concepts.xml

김포고등학교. (연도미상). 학교장인사말. Retrieved July 30, 2018, from http://www.gimpo.hs.kr/main.php?menugrp=010100&master=html&act=page

김포고등학교. (연도미상). 학교연혁. Retrieved July 30, 2018, from http://www.gimpo.hs.kr/main.php?menugrp=010200&master=html&act=page

김포고등학교. (연도미상). 학교상징.Retrieved July 30, 2018, from http://www.gimpo.hs.kr/main.php?menugrp=010300&master=html&act=page 

Scott, C., Ben, S.. (2014). Pro Git(2nd ed.). New York : Apress.

GitHub. (2016). Hello World. Retrieved July 30, 2018, from https://guides.github.com/activities/hello-world/

한국환경공단. (연도미상). 설립근거 및 목적. Retrieved July 30, 2018, from https://www.keco.or.kr/kr/intro/keco/contentsid/1618/index.do

한국환경공단. (연도미상). 에어코리아 소개. Retrieved July 30, 2018, from http://www.airkorea.or.kr/airinfo

공공데이터포털. (연도미상). 공공데이터포털 소개. Retrieved July 30, 2018, from https://www.data.go.kr/guide/guide/introduce.do 

Margaret Rouse. (2017). What is open API (public API). Retrieved July 30, 2018, from https://searchmicroservices.techtarget.com/definition/open-API

Firebase, Inc. (2018). Firebase 실시간 데이터베이스. Retrieved from https://firebase.google.com/docs/database/

오픈소스SW라이선스종합정보시스템. (연도미상). MIT License. Retrieved July 30, 2018, from https://www.olis.or.kr/license/Detailselect.do?lId=1006&mapCode=010006 

한예림, 양세현, 홍원길. (2017). 최신 정보통신기술 Google에서 제공하는 Firebase의 실시간 데이터베이스 이용에 관한 연구. 한국통신학회 학술대회논문집, , 1272-1273.

이주이, 김다희, 이은혜, 천정호. (2014). 강원대학교 어플리케이션 사용성 평가. 한국심리학회 학술대회 자료집, 2014(1), 455-455.

박수환, 김성천, 조대식, 이규웅. (2011). 안드로이드 기반의 학과 홍보 및 교과과정 소개를 위한 모바일 어플리케이션. 상지대학교 정보통신연구소 연구논문집, 7(1), 23-26.

박수현, 변혜지, 문경실. (2010). 아이폰 기반의 학교 홍보 어플리케이션 개발. 한국컴퓨터정보학회 학술발표논문집 , 18(2), 519-520.

곽소윤, 이창훈, 임용빈(2016), ｢2016 국민환경의식조사 연구｣, 한국환경정책･평가연구원. 

교육부. (2017). ｢고농도 미세먼지 대응실무매뉴얼 [시 · 도교육청, 학교, 유치원]｣.

HyunJun Kim. (2018). README.md. Retrieved July 30, 2018, from https://github.com/agemor/school-api/blob/master/README.md 

Jonathan Hedley. (연도미상). jsoup: Java HTML Parser. Retrieved March 9, 2018 from https://jsoup.org/

공공데이터포털. (연도미상). 한국환경공단_대기오염정보 조회 서비스. Retrieved July 30, 2018, from https://www.data.go.kr/dataset/15000581/openapi.do?mypageFlag=Y

라성훈, 강승모, 문세현. (2016). 풍무고등학교. Retrieved July 30, 2018, from https://play.google.com/store/apps/details?id=com.pad.phs&hl=ko

한국환경공단. (2018). ｢한국환경공단 국가대기오염정보 OpenAPI 활용가이드｣.